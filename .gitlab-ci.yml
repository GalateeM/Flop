default:
  image: python:3.11

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
cache:
  paths:
    - .cache/pip

stages:
  - build
  - deploy
  - release

build_pip_artifact:
  stage: build

  before_script:
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - apt update && apt install python3-pip -y

  script:
    - pip3 install --upgrade build wheel
    - python -m build
  artifacts:
    paths:
      - dist/*.tar.gz

build_deb_package:focal:
  cache: []
  image: ubuntu:focal
  stage: build
  script:
    - echo FOCAL_BUILD_JOB_ID=$CI_JOB_ID >> focal.env
    - apt update
    - DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt-get -y install tzdata
    - apt install debhelper build-essential virtualenv python3-venv python3-pip libpq-dev libpython3-dev wget -y
    - ln -sf packaging/debian_ubuntu/debian .
    - dpkg-buildpackage -us -uc -b
    - mv ../*.deb .
  artifacts:
    paths:
      - ./*.deb
    reports:
      dotenv: focal.env

build_deb_package:jammy:
  cache: []
  image: ubuntu:jammy
  stage: build
  script:
    - echo JAMMY_BUILD_JOB_ID=$CI_JOB_ID >> jammy.env
    - apt update
    - DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt-get -y install tzdata
    - apt install debhelper build-essential virtualenv python3-venv python3-pip libpq-dev libpython3-dev wget -y
    - ln -sf packaging/debian_ubuntu/debian .
    - dpkg-buildpackage -us -uc -b
    - mv ../*.deb .
  artifacts:
    paths:
      - ./*.deb
    reports:
      dotenv: jammy.env

build_deb_package:bullseye:
  cache: []
  image: debian:bullseye
  stage: build
  script:
    - echo BULLSEYE_BUILD_JOB_ID=$CI_JOB_ID >> bullseye.env
    - apt update
    - DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt-get -y install tzdata
    - apt install debhelper build-essential virtualenv python3-venv python3-pip libpq-dev libpython3-dev wget -y
    - ln -sf packaging/debian_ubuntu/debian .
    - dpkg-buildpackage -us -uc -b
    - mv ../*.deb .
  artifacts:
    paths:
      - ./*.deb
    reports:
      dotenv: bullseye.env

install_deb_package:focal:
  cache: []
  image: ubuntu:focal
  stage: deploy
  needs: ["build_deb_package:focal"]
  services:
    - postgres:15-alpine
  variables:
    POSTGRES_DB: "flop"
    POSTGRES_USER: "flop"
    POSTGRES_PASSWORD: "flop"
    POSTGRES_HOST: "postgres"
    POSTGRES_PORT: 5432
  script:
    - apt update
    - DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt-get -y install tzdata
    - apt install ./*.deb -y
    - sed -i 's/\(^postgres_hostname=\).*/\1postgres/' /etc/flopedt/flopedt.ini
    - sed -i 's/\(^tmp_directory=\).*/\1\/var\/flopedt\/tmp/' /etc/flopedt/flopedt.ini
    - sed -i 's/\(^cache_directory=\).*/\1\/var\/flopedt\/cache/' /etc/flopedt/flopedt.ini
    - sed -i 's/\(^static_directory=\).*/\1\/var\/flopedt\/static/' /etc/flopedt/flopedt.ini
    - cat /etc/flopedt/flopedt.ini
    - flop_admin migrate
    - bunzip2 dump.json.bz2
    - flop_admin loaddata dump.json

install_deb_package:jammy:
  cache: []
  image: ubuntu:jammy
  stage: deploy
  needs: ["build_deb_package:jammy"]
  services:
    - postgres:15-alpine
  variables:
    POSTGRES_DB: "flop"
    POSTGRES_USER: "flop"
    POSTGRES_PASSWORD: "flop"
    POSTGRES_HOST: "postgres"
    POSTGRES_PORT: 5432
  script:
    - apt update
    - DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt-get -y install tzdata bzip2
    - apt install ./*.deb -y
    - sed -i 's/\(^postgres_hostname=\).*/\1postgres/' /etc/flopedt/flopedt.ini
    - sed -i 's/\(^tmp_directory=\).*/\1\/var\/flopedt\/tmp/' /etc/flopedt/flopedt.ini
    - sed -i 's/\(^cache_directory=\).*/\1\/var\/flopedt\/cache/' /etc/flopedt/flopedt.ini
    - sed -i 's/\(^static_directory=\).*/\1\/var\/flopedt\/static/' /etc/flopedt/flopedt.ini
    - cat /etc/flopedt/flopedt.ini
    - flop_admin migrate
    - bunzip2 dump.json.bz2
    - flop_admin loaddata dump.json

install_deb_package:bullseye:
  cache: []
  image: debian:bullseye
  stage: deploy
  needs: ["build_deb_package:bullseye"]
  services:
    - postgres:15-alpine
  variables:
    POSTGRES_DB: "flop"
    POSTGRES_USER: "flop"
    POSTGRES_PASSWORD: "flop"
    POSTGRES_HOST: "postgres"
    POSTGRES_PORT: 5432
  script:
    - apt update
    - DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt-get -y install tzdata bzip2
    - apt install ./*.deb -y
    - sed -i 's/\(^postgres_hostname=\).*/\1postgres/' /etc/flopedt/flopedt.ini
    - sed -i 's/\(^tmp_directory=\).*/\1\/var\/flopedt\/tmp/' /etc/flopedt/flopedt.ini
    - sed -i 's/\(^cache_directory=\).*/\1\/var\/flopedt\/cache/' /etc/flopedt/flopedt.ini
    - sed -i 's/\(^static_directory=\).*/\1\/var\/flopedt\/static/' /etc/flopedt/flopedt.ini
    - cat /etc/flopedt/flopedt.ini
    - flop_admin migrate
    - bunzip2 dump.json.bz2
    - flop_admin loaddata dump.json

install_pip_artifact:
  stage: deploy
  needs: ["build_pip_artifact"]
  services:
    - postgres:15-alpine
  variables:
    POSTGRES_DB: "flop"
    POSTGRES_USER: "flop"
    POSTGRES_PASSWORD: "flop"
    POSTGRES_HOST: "postgres"
    POSTGRES_PORT: 5432

  before_script:
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - apt update && apt install python3-pip -y

  script:
    - pip install dist/FlOpEDT*.tar.gz
    - mkdir -p /var/flopedt/{tmp,cache}
    - sed -i 's/\(^postgres_hostname=\).*/\1postgres/' config_file/flopedt.ini
    - FLOP_CONFIG_FILE=config_file/flopedt.ini flop_admin migrate
    - bunzip2 dump.json.bz2
    - FLOP_CONFIG_FILE=config_file/flopedt.ini flop_admin loaddata dump.json

  dependencies:
    - build_pip_artifact

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  # rules:
  #   - if: $CI_COMMIT_TAG # Run this job when a tag is created
  script:
    - echo 'running release_job'
    - echo 'Previous Job IDs are printed below'
    - echo "Focal: $FOCAL_BUILD_JOB_ID"
    - echo "Jammy: $JAMMY_BUILD_JOB_ID"
    - echo "Bullseye: $BULLSEYE_BUILD_JOB_ID"
  needs:
    - job: build_deb_package:focal
      artifacts: true
    - job: build_deb_package:jammy
      artifacts: true
    - job: build_deb_package:bullseye
      artifacts: true
#   release:
#     name: "Release Executables $CI_COMMIT_TAG"
#     description: "Created using the release-cli"
#     # tag_name is a mendatory field and can not be an empty string
#     tag_name: "$CI_COMMIT_TAG"
#     assets:
#       links:
#         - name: "Focal debian package"
#           url: "https://framagit.org/flopedt/FlOpEDT/-/jobs/${FOCAL_BUILD_JOB_ID}/artifacts/raw/flopedt_${CI_COMMIT_TAG}_amd64.deb"
# # only:
# #   - main
